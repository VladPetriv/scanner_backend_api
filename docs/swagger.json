{
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Back-End side for telegram scanner",
        "title": "Scanner Back-End API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/",
    "paths": {
        "/auth/sign-in": {
            "post": {
                "description": "Handler will login user and return JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "sigi-up",
                "operationId": "login-user",
                "parameters": [
                    {
                        "description": "user info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.WebUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    },
                    "404": {
                        "description": "user with this email not found",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    }
                }
            }
        },
        "/auth/sign-up": {
            "post": {
                "description": "Handler will create new user and return message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "sign-up",
                "operationId": "create-user",
                "parameters": [
                    {
                        "description": "user info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.WebUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    },
                    "409": {
                        "description": "user with email is exist",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    }
                }
            }
        },
        "/channel/": {
            "get": {
                "description": "Handler will return channels by page from query",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "channel"
                ],
                "summary": "GetChannelsByPage",
                "operationId": "get-channels-by-page",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "channels by page",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Channel"
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    },
                    "404": {
                        "description": "channels not found",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    }
                }
            }
        },
        "/channel/count": {
            "get": {
                "description": "Handler will return channels count",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "channel"
                ],
                "summary": "GetChannelsCount",
                "operationId": "get-channels-count",
                "responses": {
                    "200": {
                        "description": "channels count",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "channels count not found",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    }
                }
            }
        },
        "/channel/{name}": {
            "get": {
                "description": "Handler will return channel by name from url",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "channel"
                ],
                "summary": "GetChannelByName",
                "operationId": "get-channel-by-name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "channel name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "channel by name",
                        "schema": {
                            "$ref": "#/definitions/model.Channel"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    },
                    "404": {
                        "description": "channel not found",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    }
                }
            }
        },
        "/message/": {
            "get": {
                "description": "Handler will return full messages by page from query",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "message"
                ],
                "summary": "GetFullMessagesByPage",
                "operationId": "get-full-messages-by-page",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "full messages by page",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.FullMessage"
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    },
                    "404": {
                        "description": "full messages not found",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    }
                }
            }
        },
        "/message/channel/{channel_id}": {
            "get": {
                "description": "Handler will return full messages by page from query and channel id from url",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "message"
                ],
                "summary": "GetFullMessagesByChannelIDAndPage",
                "operationId": "get-full-messages-by-page-and-channel-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "channel id",
                        "name": "channel_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "full messages by page and channel id",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.FullMessage"
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    },
                    "404": {
                        "description": "full messages not found",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    }
                }
            }
        },
        "/message/count": {
            "get": {
                "description": "Handler will return messages count",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "message"
                ],
                "summary": "GetMessagesCount",
                "operationId": "get-messages-count",
                "responses": {
                    "200": {
                        "description": "messages count",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "messages count not found",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    }
                }
            }
        },
        "/message/count/{channel_id}": {
            "get": {
                "description": "Handler will return messages count by channel id from url",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "message"
                ],
                "summary": "GetMessagesByChannelIDCount",
                "operationId": "get-messages-by-channel-id-count",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "channel id",
                        "name": "channel_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "messages count",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    },
                    "404": {
                        "description": "messages count not found",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    }
                }
            }
        },
        "/message/user/{user_id}": {
            "get": {
                "description": "Handler will return full messages by user id from url",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "message"
                ],
                "summary": "GetFullMessagesByUserID",
                "operationId": "get-full-messages-by-user-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "full messages by user id",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.FullMessage"
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    },
                    "404": {
                        "description": "full messages not found",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    }
                }
            }
        },
        "/message/{message_id}": {
            "get": {
                "description": "Handler will return full message by id from url",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "message"
                ],
                "summary": "GetFullMessageByID",
                "operationId": "get-full-message-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "message id",
                        "name": "message_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "full message by user id",
                        "schema": {
                            "$ref": "#/definitions/model.FullMessage"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    },
                    "404": {
                        "description": "full messages not found",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    }
                }
            }
        },
        "/replie/{message_id}": {
            "get": {
                "description": "Handler will return full replies by message id from url",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "replie"
                ],
                "summary": "GetFullRepliesByMessageID",
                "operationId": "get-full-replies-by-message-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "message id",
                        "name": "message_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "replies by message id",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.FullReplie"
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    },
                    "404": {
                        "description": "replies not found",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    }
                }
            }
        },
        "/saved/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Handler will create saved message and return message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "saved"
                ],
                "summary": "CreateSavedMessage",
                "operationId": "create-saved-message",
                "parameters": [
                    {
                        "description": "saved message info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Saved"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "saved message created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    }
                }
            }
        },
        "/saved/delete/{message_id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Handler will delete saved message by id from url",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "saved"
                ],
                "summary": "DeleteSavedMessage",
                "operationId": "delete-saved-message",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "saved message id",
                        "name": "message_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "saved message deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    }
                }
            }
        },
        "/saved/{user_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Handler will return saved messages by user id from url",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "saved"
                ],
                "summary": "GetSavedMessages",
                "operationId": "get-saved-messages",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "saved by user id",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Saved"
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    },
                    "404": {
                        "description": "saved messages not found",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "description": "Handler will return user by id from url",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "GetUserByID",
                "operationId": "get-user-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user by id",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    },
                    "404": {
                        "description": "user not found",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/lib.HttpError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "lib.HttpError": {
            "description": "Http Error structure",
            "type": "object",
            "properties": {
                "code": {
                    "description": "Http status code",
                    "type": "integer"
                },
                "message": {
                    "description": "Error message",
                    "type": "string"
                },
                "name": {
                    "description": "Http status name",
                    "type": "string"
                }
            }
        },
        "model.Channel": {
            "description": "Channel model",
            "type": "object",
            "properties": {
                "id": {
                    "description": "channel id example: 1",
                    "type": "integer"
                },
                "imageUrl": {
                    "description": "channel image url from firebase",
                    "type": "string"
                },
                "name": {
                    "description": "channel name example: go_go",
                    "type": "string"
                },
                "title": {
                    "description": "channel title example: GO ukrainian community",
                    "type": "string"
                }
            }
        },
        "model.FullMessage": {
            "description": "Full message model includes all info about message",
            "type": "object",
            "properties": {
                "channelImageUrl": {
                    "description": "Channel image url from firebase",
                    "type": "string"
                },
                "channelName": {
                    "description": "Channel name example: go_go",
                    "type": "string"
                },
                "channelTitle": {
                    "description": "Channel title example: GO ukrainian community",
                    "type": "string"
                },
                "id": {
                    "description": "Message id example: 1",
                    "type": "integer"
                },
                "messageImageUrl": {
                    "description": "Message image url from firebase",
                    "type": "string"
                },
                "messageUrl": {
                    "description": "Message url from telegram",
                    "type": "string"
                },
                "replies": {
                    "description": "Replies",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.FullReplie"
                    }
                },
                "repliesCount": {
                    "description": "Replies count example: 50",
                    "type": "integer"
                },
                "title": {
                    "description": "Message title example: Hello, anyone works with Golang?",
                    "type": "string"
                },
                "userFullname": {
                    "description": "User fullname example: Ivan Petrovich",
                    "type": "string"
                },
                "userId": {
                    "description": "User id example: 1",
                    "type": "integer"
                },
                "userImageUrl": {
                    "description": "User image url from firebase",
                    "type": "string"
                }
            }
        },
        "model.FullReplie": {
            "description": "Full replie model includes all info about replie",
            "type": "object",
            "properties": {
                "id": {
                    "description": "Replies id example: 1",
                    "type": "integer"
                },
                "messageId": {
                    "description": "Replie message id example: 1",
                    "type": "integer"
                },
                "title": {
                    "description": "Replie title example: Yes",
                    "type": "string"
                },
                "userFullname": {
                    "description": "Replie user fullname example: Ivan Petrovich",
                    "type": "string"
                },
                "userId": {
                    "description": "Replie user id example: 1",
                    "type": "integer"
                },
                "userImageUrl": {
                    "description": "Replie user image url from firebase",
                    "type": "string"
                }
            }
        },
        "model.Saved": {
            "description": "Saved message model",
            "type": "object",
            "properties": {
                "id": {
                    "description": "Saved id example: 1",
                    "type": "integer"
                },
                "messageId": {
                    "description": "Saved message id example: 1",
                    "type": "integer"
                },
                "userId": {
                    "description": "Saved user id example: 1",
                    "type": "integer"
                }
            }
        },
        "model.User": {
            "description": "Telegram user model",
            "type": "object",
            "properties": {
                "fullname": {
                    "description": "User fullname example Ivan Petrovich",
                    "type": "string"
                },
                "id": {
                    "description": "User id example: 1",
                    "type": "integer"
                },
                "imageUrl": {
                    "description": "User image url from firebase",
                    "type": "string"
                },
                "username": {
                    "description": "User username example: ivanptr21",
                    "type": "string"
                }
            }
        },
        "model.WebUser": {
            "description": "User model",
            "type": "object",
            "properties": {
                "email": {
                    "description": "User email example: test@test.com",
                    "type": "string"
                },
                "id": {
                    "description": "User id example: 1",
                    "type": "integer"
                },
                "password": {
                    "description": "user Password example: d1e8a70b5ccab1dc2f56bbf7e99f064a660c08e361a35751b9c483c88943d082",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}