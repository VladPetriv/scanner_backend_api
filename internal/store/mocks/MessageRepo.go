// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"
import model "github.com/VladPetriv/scanner_backend_api/internal/model"

// MessageRepo is an autogenerated mock type for the MessageRepo type
type MessageRepo struct {
	mock.Mock
}

// GetFullMessageByID provides a mock function with given fields: ID
func (_m *MessageRepo) GetFullMessageByID(ID int) (*model.FullMessage, error) {
	ret := _m.Called(ID)

	var r0 *model.FullMessage
	if rf, ok := ret.Get(0).(func(int) *model.FullMessage); ok {
		r0 = rf(ID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.FullMessage)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(ID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetFullMessagesByChannelIDAndPage provides a mock function with given fields: ID, offset
func (_m *MessageRepo) GetFullMessagesByChannelIDAndPage(ID int, offset int) ([]model.FullMessage, error) {
	ret := _m.Called(ID, offset)

	var r0 []model.FullMessage
	if rf, ok := ret.Get(0).(func(int, int) []model.FullMessage); ok {
		r0 = rf(ID, offset)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.FullMessage)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int, int) error); ok {
		r1 = rf(ID, offset)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetFullMessagesByPage provides a mock function with given fields: offset
func (_m *MessageRepo) GetFullMessagesByPage(offset int) ([]model.FullMessage, error) {
	ret := _m.Called(offset)

	var r0 []model.FullMessage
	if rf, ok := ret.Get(0).(func(int) []model.FullMessage); ok {
		r0 = rf(offset)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.FullMessage)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(offset)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetFullMessagesByUserID provides a mock function with given fields: ID
func (_m *MessageRepo) GetFullMessagesByUserID(ID int) ([]model.FullMessage, error) {
	ret := _m.Called(ID)

	var r0 []model.FullMessage
	if rf, ok := ret.Get(0).(func(int) []model.FullMessage); ok {
		r0 = rf(ID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.FullMessage)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(ID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetMessagesCount provides a mock function with given fields:
func (_m *MessageRepo) GetMessagesCount() (int, error) {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetMessagesCountByChannelID provides a mock function with given fields: ID
func (_m *MessageRepo) GetMessagesCountByChannelID(ID int) (int, error) {
	ret := _m.Called(ID)

	var r0 int
	if rf, ok := ret.Get(0).(func(int) int); ok {
		r0 = rf(ID)
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(ID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
