// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"
import model "github.com/VladPetriv/scanner_backend_api/internal/model"

// ChannelRepo is an autogenerated mock type for the ChannelRepo type
type ChannelRepo struct {
	mock.Mock
}

// GetChannelByName provides a mock function with given fields: name
func (_m *ChannelRepo) GetChannelByName(name string) (*model.Channel, error) {
	ret := _m.Called(name)

	var r0 *model.Channel
	if rf, ok := ret.Get(0).(func(string) *model.Channel); ok {
		r0 = rf(name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Channel)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetChannelsByPage provides a mock function with given fields: offset
func (_m *ChannelRepo) GetChannelsByPage(offset int) ([]model.Channel, error) {
	ret := _m.Called(offset)

	var r0 []model.Channel
	if rf, ok := ret.Get(0).(func(int) []model.Channel); ok {
		r0 = rf(offset)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.Channel)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(offset)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetChannelsCount provides a mock function with given fields:
func (_m *ChannelRepo) GetChannelsCount() (int, error) {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
