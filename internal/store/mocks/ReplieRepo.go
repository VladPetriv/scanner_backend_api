// Code generated by mockery v2.14.1. DO NOT EDIT.

package mocks

import (
	model "github.com/VladPetriv/scanner_backend_api/internal/model"
	mock "github.com/stretchr/testify/mock"
)

// ReplieRepo is an autogenerated mock type for the ReplieRepo type
type ReplieRepo struct {
	mock.Mock
}

// CreateReplie provides a mock function with given fields: replie
func (_m *ReplieRepo) CreateReplie(replie *model.ReplieDTO) error {
	ret := _m.Called(replie)

	var r0 error
	if rf, ok := ret.Get(0).(func(*model.ReplieDTO) error); ok {
		r0 = rf(replie)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetFullRepliesByMessageID provides a mock function with given fields: ID
func (_m *ReplieRepo) GetFullRepliesByMessageID(ID int) ([]model.FullReplie, error) {
	ret := _m.Called(ID)

	var r0 []model.FullReplie
	if rf, ok := ret.Get(0).(func(int) []model.FullReplie); ok {
		r0 = rf(ID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.FullReplie)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(ID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewReplieRepo interface {
	mock.TestingT
	Cleanup(func())
}

// NewReplieRepo creates a new instance of ReplieRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewReplieRepo(t mockConstructorTestingTNewReplieRepo) *ReplieRepo {
	mock := &ReplieRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
