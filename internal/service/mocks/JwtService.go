// Code generated by mockery v2.14.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// JwtService is an autogenerated mock type for the JwtService type
type JwtService struct {
	mock.Mock
}

// GenerateToken provides a mock function with given fields: userEmail
func (_m *JwtService) GenerateToken(userEmail string) (string, error) {
	ret := _m.Called(userEmail)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(userEmail)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(userEmail)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ParseToken provides a mock function with given fields: accessToken
func (_m *JwtService) ParseToken(accessToken string) (string, error) {
	ret := _m.Called(accessToken)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(accessToken)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(accessToken)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewJwtService interface {
	mock.TestingT
	Cleanup(func())
}

// NewJwtService creates a new instance of JwtService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewJwtService(t mockConstructorTestingTNewJwtService) *JwtService {
	mock := &JwtService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
